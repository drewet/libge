CC	=	gcc
C++	=	g++
CFLAGS	= -O2 -Werror -mfpmath=sse -msse -fPIC -I./include
CFLAGSDEBUG	= -g3 -Wall -mfpmath=sse -msse -fPIC -I./include
CFLAGS = $(CFLAGSDEBUG)
RM = rm -f

DEFS += -DLINUX
#OBJS += obj/system/linux/gelinuxkeyboard.o

TARGET	 = "Game"
EXT_LIBS = -llua5.2 -lmad -ljpeg -lpng -lz -lfreetype
# -llua -lmad
LIBS	 =  $(EXT_LIBS) -lasound -lXxf86vm -lGL -lX11 -lm -pthread

ifeq ($(wildcard testsrc),) 
MORE_OBJS = obj/main.o
else
MORE_SRCS = $(wildcard testsrc/*.c)
MORE_OBJS = $(subst testsrc,testobj, $(MORE_SRCS:.c=.o))
$(shell mkdir -p testobj)
endif

all: $(OBJS) $(MORE_OBJS)
	$(CC) $(CFLAGS) $(MORE_OBJS) $(OBJS) -o $(TARGET) $(LIBS) $(DEFS) -DLIBGE_STATIC

lib: $(OBJS)
	@mkdir -p build build/linux
	$(CC) -shared -o build/linux/libge.so $(CFLAGS) $(OBJS) $(LIBS) $(DEFS) -DLIBGE_STATIC

lib_static: $(OBJS)
	@mkdir -p build build/linux
	ar cru build/linux/libge.a $(OBJS)
	ranlib build/linux/libge.a

install:
	mkdir -p /usr/include/libge
	cp include/*.h /usr/include/libge
	cp build/linux/libge.so /usr/lib/libge.so

obj/%.o: %.c
	$(CC) $(CFLAGS) $(DEFS) -c $< -o $@ -DLIBGE_STATIC
obj/%.o: system/$(platform)/%.c
	$(CC) $(CFLAGS) $(DEFS) -c $< -o $@ -DLIBGE_STATIC
obj/%.o: video/$(platform)/%.c
	$(CC) $(CFLAGS) $(DEFS) -c $< -o $@ -DLIBGE_STATIC
obj/%.o: audio/$(platform)/%.c
	$(CC) $(CFLAGS) $(DEFS) -c $< -o $@ -DLIBGE_STATIC